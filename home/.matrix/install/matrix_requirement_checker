#!/usr/bin/env bash

function check_first_bundler {
    command -v bundle >/dev/null 2>&1
 
    if [ $? -eq 1 ]; then
        echo -e "${YELLOW} Bundle gem is missing. Run: 'sudo gem install bundler' ${NORMAL}"
        echo -e "${YELLOW} Run: 'cd ~/.matrix/ruby/ && sudo bundle install' ${NORMAL}"
    else
        [ -f ~/.matrix/ruby/Gemfile.lock ] || echo -e "${YELLOW} GemFile not reconciled. Run: 'cd ~/.matrix/ruby/ && sudo bundle install' ${NORMAL}"
    fi
}

function check_first_ruby {
    export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting                                                                                                                                             
    [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

    command -v ruby >/dev/null 2>&1 
    if [ $? -eq 1 ]; then
        echo -e >&2 "${RED}[WARNING] No Ruby Found. ${NORMAL}"
    else
        if [ "`type -t rvm`" == "function" ]; then
            echo -ne "${GREEN}RVM is present => ${NORMAL} "
            rvm gemdir
            ruby --version
            check_first_bundler
        else
            echo -e "${YELLOW}RVM is not present. ${NORMAL}"
            ruby --version
            check_first_bundler
        fi
    fi
}

function check_first_powerline {
  if [[ -n $MATRIX_POWERLINE ]]; then
    command -v powerline-daemon >/dev/null 2>&1
    if [ $? -eq 0 ]; then
        command -v socat >/dev/null 2>&1 || { echo -e >&2 "${YELLOW}[POWERLINE WARNING] No socat found.${NORMAL}"; }
        command -v pip >/dev/null 2>&1 || { echo -e >&2 "${YELLOW}[POWERLINE WARNING] No python pip found.${NORMAL}"; }
        pip show psutil -q >/dev/null 2>&1 || { echo -e >&2 "${YELLOW}[POWERLINE WARNING] No python pip psutil Found.${NORMAL}"; }
    else
        echo -e >&2 "${RED}[WARNING] Powerline is not found, but enabled.${NORMAL}"; 
    fi

  fi
}

function check_first_nodejs {
    command -v node >/dev/null 2>&1
    if [ $? -eq 1 ]; then
        echo -e >&2 "${RED}[WARNING] No Native Node(js) Found. ${NORMAL}"
    fi
}

function check_first_bash_copmpletion
{
    [[ "$(type -t _get_comp_words_by_ref)" -eq "function" ]] ||  echo -e "Bash completion not installed?"
    # [[ `complete -p |wc -l` -ge 6 ]] ||  echo -e "Seems like bash completion is not sourcing the correct folders"
}

function check_first_vim {
    if [ -d "$HOME"/.vim/bundle/Vundle.vim ]; then
        echo -en "Found Vundle..."
        if [ -d "$HOME"/.vim/bundle/vim-airline ]; then
            echo -e "plugins likely found."
        else
            echo -e "${YELLOW}Need to install VIM Vundle bundles: 'vim +PluginInstall +qall'${NORMAL}"
        fi 
    else
        echo -e "${RED}Vundle not found for VIM${NORMAL}"
        echo -e "${YELLOW}Run 'git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim'${NORMAL}"
        echo -e "${YELLOW}Need to install VIM Vundle bundles: 'vim +PluginInstall +qall'${NORMAL}"
    fi
}


function check_first_mr {
    command -v mr >/dev/null 2>&1
 
    if [ $? -eq 1 ]; then
        echo -e "${YELLOW} MR 'multiple repo' git bundle manager is missing. Install 'mr'. ${NORMAL}"
        echo -e "${YELLOW} Run: 'cd ~ && mr -j5 update ' ${NORMAL}"
    fi
}  

echo -e "${CYAN}Checking ENV${NORMAL}"
check_first_ruby
check_first_powerline
check_first_nodejs
check_first_bash_copmpletion
check_first_vim
check_first_mr
echo -e "${CYAN}Completed ENV check ${NORMAL}"
